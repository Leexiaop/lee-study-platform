{"version":3,"sources":["pages/ad/index.js"],"names":["defaultColumns","title","dataIndex","key","render","text","tags","map","tag","color","length","toUpperCase","record","size","name","data","age","address","App","useState","dcolumns","setDcolumns","components","setComponents","ResizeableTitle","props","onResize","width","restProps","height","useEffect","header","cell","handleResize","index","e","console","log","nextColumns","columns","col","onHeaderCell","column","className","dataSource"],"mappings":"kRAOMA,EAAiB,CACtB,CACCC,MAAO,OACPC,UAAW,OACXC,IAAK,OACLC,OAAQ,SAACC,GAAD,OAAU,4BAAIA,MAEvB,CACCJ,MAAO,MACPC,UAAW,MACXC,IAAK,OAEN,CACCF,MAAO,UACPC,UAAW,UACXC,IAAK,WAEN,CACCF,MAAO,OACPE,IAAK,OACLD,UAAW,OACXE,OAAQ,SAACE,GAAD,OACP,mCACEA,EAAKC,KAAI,SAACC,GACV,IAAIC,EAAQD,EAAIE,OAAS,EAAI,WAAa,QAI1C,MAHY,UAARF,IACHC,EAAQ,WAGR,cAAC,IAAD,CAAKA,MAAOA,EAAZ,SACED,EAAIG,eADkBH,UAQ7B,CACCP,MAAO,SACPE,IAAK,SACLC,OAAQ,SAACC,EAAMO,GAAP,OACP,eAAC,IAAD,CAAOC,KAAK,SAAZ,UACC,uCAEE,IACAD,EAAOE,QAET,6CAMEC,EAAO,CACZ,CACCZ,IAAK,IACLW,KAAM,aACNE,IAAK,GACLC,QAAS,2BACTX,KAAM,CAAC,OAAQ,cAEhB,CACCH,IAAK,IACLW,KAAM,YACNE,IAAK,GACLC,QAAS,yBACTX,KAAM,CAAC,UAER,CACCH,IAAK,IACLW,KAAM,YACNE,IAAK,GACLC,QAAS,yBACTX,KAAM,CAAC,OAAQ,aA8DFY,UA1DH,WACX,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAAkB,SAACC,GAExB,IAAQC,EAAwCD,EAAxCC,SAAR,EAAgDD,EAA9BE,aAAlB,MAA0B,IAA1B,EAAkCC,EAAlC,YAAgDH,EAAhD,GACA,OAAKE,EAKJ,cAAC,YAAD,CAAWA,MAAOA,EAAOE,OAAQ,EAAGH,SAAUA,EAA9C,SACC,kCAAQE,MALF,kCAAQA,KAUjBE,qBAAU,WACTT,EAAYrB,GACZuB,EAAc,CACbQ,OAAQ,CACPC,KAAMR,OAGN,IAEH,IAAMS,EAAe,SAACC,GAAD,OAAW,SAACC,EAAD,GAAkB,IAAZtB,EAAW,EAAXA,KACrCuB,QAAQC,IAAI,OAAQxB,GAGpB,IAAMyB,EAAW,YAAOC,GACxBD,EAAYJ,GAAZ,2BACII,EAAYJ,IADhB,IAECP,MAAOd,EAAKc,QAEbN,EAAYiB,KAGPC,EAAUnB,EAASb,KAAI,SAACiC,EAAKN,GAAN,mBAAC,eAC1BM,GADyB,IAE5BC,aAAc,SAACC,GAAD,MAAa,CAC1Bf,MAAOa,EAAIb,OAAS,IACpBD,SAAUO,EAAaC,UAIzB,OACC,qBAAKS,UAAU,YAAf,SACC,cAAC,IAAD,CACCrB,WAAYA,EACZiB,QAASA,EACTK,WAAY7B","file":"static/js/15.f24ef884.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport { Table, Tag, Space } from 'antd';\nimport { Resizable } from 'react-resizable';\n\nimport './index.scss';\n\nconst defaultColumns = [\n\t{\n\t\ttitle: 'Name',\n\t\tdataIndex: 'name',\n\t\tkey: 'name',\n\t\trender: (text) => <a>{text}</a>\n\t},\n\t{\n\t\ttitle: 'Age',\n\t\tdataIndex: 'age',\n\t\tkey: 'age'\n\t},\n\t{\n\t\ttitle: 'Address',\n\t\tdataIndex: 'address',\n\t\tkey: 'address'\n\t},\n\t{\n\t\ttitle: 'Tags',\n\t\tkey: 'tags',\n\t\tdataIndex: 'tags',\n\t\trender: (tags) => (\n\t\t\t<>\n\t\t\t\t{tags.map((tag) => {\n\t\t\t\t\tlet color = tag.length > 5 ? 'geekblue' : 'green';\n\t\t\t\t\tif (tag === 'loser') {\n\t\t\t\t\t\tcolor = 'volcano';\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Tag color={color} key={tag}>\n\t\t\t\t\t\t\t{tag.toUpperCase()}\n\t\t\t\t\t\t</Tag>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</>\n\t\t)\n\t},\n\t{\n\t\ttitle: 'Action',\n\t\tkey: 'action',\n\t\trender: (text, record) => (\n\t\t\t<Space size=\"middle\">\n\t\t\t\t<a>\n\t\t\t\t\tInvite\n\t\t\t\t\t{' '}\n\t\t\t\t\t{record.name}\n\t\t\t\t</a>\n\t\t\t\t<a>Delete</a>\n\t\t\t</Space>\n\t\t)\n\t}\n];\n\nconst data = [\n\t{\n\t\tkey: '1',\n\t\tname: 'John Brown',\n\t\tage: 32,\n\t\taddress: 'New York No. 1 Lake Park',\n\t\ttags: ['nice', 'developer']\n\t},\n\t{\n\t\tkey: '2',\n\t\tname: 'Jim Green',\n\t\tage: 42,\n\t\taddress: 'London No. 1 Lake Park',\n\t\ttags: ['loser']\n\t},\n\t{\n\t\tkey: '3',\n\t\tname: 'Joe Black',\n\t\tage: 32,\n\t\taddress: 'Sidney No. 1 Lake Park',\n\t\ttags: ['cool', 'teacher']\n\t}\n];\n\nconst App = () => {\n\tconst [dcolumns, setDcolumns] = useState([]);\n\tconst [components, setComponents] = useState({});\n\n\tconst ResizeableTitle = (props) => {\n\t\t// eslint-disable-next-line react/prop-types\n\t\tconst { onResize, width = 100, ...restProps } = props;\n\t\tif (!width) {\n\t\t\treturn <th {...restProps} />;\n\t\t}\n\n\t\treturn (\n\t\t\t<Resizable width={width} height={0} onResize={onResize}>\n\t\t\t\t<th {...restProps} />\n\t\t\t</Resizable>\n\t\t);\n\t};\n\n\tuseEffect(() => {\n\t\tsetDcolumns(defaultColumns);\n\t\tsetComponents({\n\t\t\theader: {\n\t\t\t\tcell: ResizeableTitle\n\t\t\t}\n\t\t});\n\t}, []);\n\n\tconst handleResize = (index) => (e, { size }) => {\n\t\tconsole.log('size', size);\n\n\t\t// eslint-disable-next-line no-use-before-define\n\t\tconst nextColumns = [...columns];\n\t\tnextColumns[index] = {\n\t\t\t...nextColumns[index],\n\t\t\twidth: size.width\n\t\t};\n\t\tsetDcolumns(nextColumns);\n\t};\n\n\tconst columns = dcolumns.map((col, index) => ({\n\t\t...col,\n\t\tonHeaderCell: (column) => ({\n\t\t\twidth: col.width || 100, // 100 没有设置宽度可以在此写死 例如100试下\n\t\t\tonResize: handleResize(index)\n\t\t})\n\t}));\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Table\n\t\t\t\tcomponents={components}\n\t\t\t\tcolumns={columns}\n\t\t\t\tdataSource={data}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"],"sourceRoot":""}